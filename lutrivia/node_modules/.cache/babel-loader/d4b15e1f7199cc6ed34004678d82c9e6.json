{"ast":null,"code":"var _jsxFileName = \"/Users/danajackson/Flatiron/code-challenge-practice/lutrivia-react/lutrivia/src/Question.js\";\nimport React from 'react';\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      correct: null\n    };\n\n    this.evaluate = e => {\n      e.target.value === this.props.answer ? e.target.style.backgroundColor = 'green' : e.target.style.backgroundColor = 'green';\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.data.text), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.evaluate,\n      value: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"button\", {\n      onClick: this.evaluate,\n      value: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"False\"));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/danajackson/Flatiron/code-challenge-practice/lutrivia-react/lutrivia/src/Question.js"],"names":["React","Question","Component","state","correct","evaluate","e","target","value","props","answer","style","backgroundColor","render","data","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC7B;AACFC,MAAAA,OAAO,EAAE;AADP,KAD6B;;AAAA,SAKnCC,QALmC,GAKvBC,CAAD,IAAM;AACbA,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,KAAKC,KAAL,CAAWC,MAA9B,GAAuCJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAeC,eAAf,GAA+B,OAAtE,GAAgFN,CAAC,CAACC,MAAF,CAASI,KAAT,CAAeC,eAAf,GAA+B,OAA/G;AACH,KAPkC;AAAA;;AASnCC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,IAApB,CADJ,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjC,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKV,QAAtB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKA,QAAtB;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH;;AAjBkC;;AAoBvC,eAAeJ,QAAf","sourcesContent":["import React from 'react'\n\nclass Question extends React.Component {\n    state={\n        correct: null\n    }\n\n    evaluate = (e) =>{\n        e.target.value === this.props.answer ? e.target.style.backgroundColor='green' : e.target.style.backgroundColor='green'\n    }\n\n    render(){\n        return(\n            <div>\n                <p>{this.props.data.text}</p><br />\n                <button onClick={this.evaluate} value=\"true\">True</button> \n                <button onClick={this.evaluate} value=\"false\">False</button>\n            </div>\n        )\n    }\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}